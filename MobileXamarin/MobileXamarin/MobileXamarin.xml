<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MobileXamarin</name>
    </assembly>
    <members>
        <member name="T:MobileXamarin.AppResources.Localization.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.APPLICATION_NAME">
            <summary>
              Looks up a localized string similar to Calculation App.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.CONFIRM_PASSWORD_PLACEHOLDER">
            <summary>
              Looks up a localized string similar to Confirm password.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.CONFIRM_SIGN_UP_MESSAGE">
            <summary>
              Looks up a localized string similar to Thank you, You&apos;re registered to {0}.\n An email has been sent to you, please check it to verify your account..
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.COPYRIGHT_TEXT">
            <summary>
              Looks up a localized string similar to Copyright Â© Urszula Lis &amp; Piotr Makowiec.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.DETAILS_TITLE">
            <summary>
              Looks up a localized string similar to Details.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.EMAIL_PLACEHOLDER">
            <summary>
              Looks up a localized string similar to Email.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.EMAIL_REQUIRED">
             <summary>
               Looks up a localized string similar to Email is required !
            .
             </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.EQUOTION_CHOOSE">
            <summary>
              Looks up a localized string similar to Choose an equotion.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.ERROR_MESSAGE">
            <summary>
              Looks up a localized string similar to An error occurred while your request was being processed, please try again later..
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.FORGOT_PASSWORD_MESSAGE">
            <summary>
              Looks up a localized string similar to An email has been sent to you, please check it to update your password..
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.FORGOT_PASSWORD_TEXT">
            <summary>
              Looks up a localized string similar to Forgot Password.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.HOME_TITLE">
            <summary>
              Looks up a localized string similar to Home.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.INVALID_EMAIL_REQUIRED">
             <summary>
               Looks up a localized string similar to Invalid email address !
            .
             </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.KINETIC_TITLE">
            <summary>
              Looks up a localized string similar to Kinetic Energy Equation.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.LAGRANGE">
            <summary>
              Looks up a localized string similar to Lagrange Interpolation.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.MENU_TEXT">
            <summary>
              Looks up a localized string similar to Sample Menu.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.OK">
            <summary>
              Looks up a localized string similar to Ok.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.PASSWORD_CONFIRM_PASSWORD_REQUIRED">
            <summary>
              Looks up a localized string similar to Password does not match the confirm password..
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.PASSWORD_PLACEHOLDER">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.PASSWORD_REQUIRED">
             <summary>
               Looks up a localized string similar to Password is required !
            .
             </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.RESULT_TITLE">
            <summary>
              Looks up a localized string similar to Result.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.ROCKET">
            <summary>
              Looks up a localized string similar to Vertical movement of the rocket.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.SEND_TEXT">
            <summary>
              Looks up a localized string similar to Send.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.SIGN_IN_TEXT">
            <summary>
              Looks up a localized string similar to Sign In.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.SIGN_UP_TEXT">
            <summary>
              Looks up a localized string similar to Sign Up.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.Unknown_speed_unit">
            <summary>
              Looks up a localized string similar to Unknown speed unit.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.Unknown_time_unit">
            <summary>
              Looks up a localized string similar to Unknown time unit.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.Unknown_weight_unit">
            <summary>
              Looks up a localized string similar to Unknown weight unit.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.USERNAME_PLACEHOLDER">
            <summary>
              Looks up a localized string similar to Username.
            </summary>
        </member>
        <member name="P:MobileXamarin.AppResources.Localization.Resources.USERNAME_REQUIRED">
             <summary>
               Looks up a localized string similar to Username is required !
            .
             </summary>
        </member>
        <member name="T:MobileXamarin.Enums.EquationType">
            <summary>
            Types of equations
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.EquationType.Kinetic">
            <summary>
            Kinetic energy equation
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.EquationType.Lagrange">
            <summary>
            Lagrange Interpolation equation
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.EquationType.Rocket">
            <summary>
            Vertical start of rocket equation
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.EquationType.Unknown">
            <summary>
            Unknown equation
            </summary>
        </member>
        <member name="T:MobileXamarin.Enums.Units">
            <summary>
            Units used in program
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.Units.Meter">
            <summary>
            Meter [m]
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.Units.Kilometer">
            <summary>
            Kilometer [km]
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.Units.Second">
            <summary>
            Second [s]
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.Units.Hour">
            <summary>
            Hour [h]
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.Units.KilometerPerHour">
            <summary>
            Kilometer per hour [km/h]
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.Units.MeterForSecond">
            <summary>
            Meter per second [m/s]
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.Units.Kilogram">
            <summary>
            Kilogram [kg]
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.Units.Gram">
            <summary>
            Gram [g]
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.Units.KilogramPerSecond">
            <summary>
            Kilogram per second [kg/s]
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.Units.Celsius">
            <summary>
            Celsius [C]
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.Units.Kelvin">
            <summary>
            Kelvin [K]
            </summary>
        </member>
        <member name="F:MobileXamarin.Enums.Units.Unknown">
            <summary>
            Unknown unit
            </summary>
        </member>
        <member name="T:MobileXamarin.EquationResolvers.IKineticEquationResolver">
            <summary>
            Resolver for kinetic energy equation
            </summary>
        </member>
        <member name="M:MobileXamarin.EquationResolvers.IKineticEquationResolver.Resolve(System.Double,MobileXamarin.Enums.Units,System.Double,MobileXamarin.Enums.Units)">
            <summary>
            Resolves kinetic energy equation
            </summary>
            <param name="weight">Weight of the object</param>
            <param name="weightUnit">Unit of object's weight</param>
            <param name="speed">Speed of object</param>
            <param name="speedUnit">Unit of object's speed</param>
            <returns>Returns step by step in Latex format result of the equation resolving</returns>
        </member>
        <member name="T:MobileXamarin.EquationResolvers.ILagrangeResolver">
            <summary>
            Resolver for Lagrange interpolation equation
            </summary>
        </member>
        <member name="M:MobileXamarin.EquationResolvers.ILagrangeResolver.Resolve(System.Collections.Generic.IEnumerable{MobileXamarin.Models.Point})">
            <summary>
            Resolves lagrange interpolation
            </summary>
            <param name="controlPoints">Control points based on interpolation is calculated</param>
            <returns>Points which can be displayed on the chart</returns>
        </member>
        <member name="T:MobileXamarin.EquationResolvers.IRocketEquationResolver">
            <summary>
            Resolver for vertical rocket start equation
            </summary>
        </member>
        <member name="M:MobileXamarin.EquationResolvers.IRocketEquationResolver.Resolve(MobileXamarin.Models.RocketParameter)">
            <summary>
            Resolves rocket equation
            </summary>
            <param name="rocketParameter">Parameters of the rocket</param>
            <returns>Result</returns>
        </member>
        <member name="T:MobileXamarin.EquationResolvers.KineticEquationResolver">
            <inheritdoc />
        </member>
        <member name="M:MobileXamarin.EquationResolvers.KineticEquationResolver.Resolve(System.Double,MobileXamarin.Enums.Units,System.Double,MobileXamarin.Enums.Units)">
            <summary>
            Resolves kinetic energy equation
            </summary>
            <param name="weight">Weight of the object</param>
            <param name="weightUnit">Unit of object's weight</param>
            <param name="speed">Speed of object</param>
            <param name="speedUnit">Unit of object's speed</param>
            <returns>Returns step by step in Latex format result of the equation resolving</returns>
        </member>
        <member name="T:MobileXamarin.EquationResolvers.LagrangeResolver">
            <summary>
            Lagrange resolver
            </summary>
        </member>
        <member name="M:MobileXamarin.EquationResolvers.LagrangeResolver.Resolve(System.Collections.Generic.IEnumerable{MobileXamarin.Models.Point})">
            <summary>
            Resolves lagrange interpolation
            </summary>
            <param name="controlPoints">Control points based on interpolation is calculated</param>
            <returns>Points which can be displayed on the chart</returns>
        </member>
        <member name="T:MobileXamarin.EquationResolvers.Normalization">
            <summary>
            Normalization class
            </summary>
        </member>
        <member name="M:MobileXamarin.EquationResolvers.Normalization.NormalizeSpeed(System.Double,MobileXamarin.Enums.Units)">
            <summary>
            Normalizes speed to meter per second
            </summary>
            <param name="speed">Speed value</param>
            <param name="speedUnit">Speed unit</param>
            <returns>Speed in meter for second unit</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Exception when cannot find unit</exception>
        </member>
        <member name="M:MobileXamarin.EquationResolvers.Normalization.NormalizeWeight(System.Double,MobileXamarin.Enums.Units)">
            <summary>
            Normalizes weight to kilograms
            </summary>
            <param name="weight">Weight value</param>
            <param name="weightUnit">Weight unit</param>
            <returns>Weight in kilograms</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Exception when cannot find unit</exception>
        </member>
        <member name="M:MobileXamarin.EquationResolvers.Normalization.NormalizeTime(System.Double,MobileXamarin.Enums.Units)">
            <summary>
            Normalizes time to seconds
            </summary>
            <param name="time">Time value</param>
            <param name="timeUnit">Time unit</param>
            <returns>Time in seconds</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Exception when cannot find unit</exception>
        </member>
        <member name="T:MobileXamarin.EquationResolvers.RocketEquationResolver">
            <inheritdoc />
        </member>
        <member name="M:MobileXamarin.EquationResolvers.RocketEquationResolver.Resolve(MobileXamarin.Models.RocketParameter)">
            <summary>
            Resolves rocket equation
            </summary>
            <param name="rocketParameter">Parameters of the rocket</param>
            <returns>Result</returns>
        </member>
        <member name="T:MobileXamarin.IModels.IEquation">
            <summary>
            Equation model interface
            </summary>
        </member>
        <member name="P:MobileXamarin.IModels.IEquation.Name">
            <summary>
            Name of the equation
            </summary>
        </member>
        <member name="P:MobileXamarin.IModels.IEquation.Image">
            <summary>
            Gets the image of that equation
            </summary>
        </member>
        <member name="P:MobileXamarin.IModels.IEquation.EquationType">
            <summary>
            Type of equation
            </summary>
        </member>
        <member name="T:MobileXamarin.IViewModels.IEquationViewModelBase">
            <summary>
            Base interface for equation view models
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IEquationViewModelBase.Resolve">
            <summary>
            Gets command for resolving equation
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IEquationViewModelBase.IsBusy">
            <summary>
            Indicates when to show busy indication
            </summary>
        </member>
        <member name="T:MobileXamarin.IViewModels.IHomeViewModel">
            <summary>
            View model for HomeView
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IHomeViewModel.Equations">
            <summary>
            Gets all equations
            </summary>
        </member>
        <member name="T:MobileXamarin.IViewModels.IKineticEnergyEquationViewModel">
            <summary>
            View model for Kinetic Energy Equation View
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IKineticEnergyEquationViewModel.Weight">
            <summary>
            Gets or sets weight of the object
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IKineticEnergyEquationViewModel.Speed">
            <summary>
            Gets or sets speed of the object
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IKineticEnergyEquationViewModel.SelectedWeightUnit">
            <summary>
            Gets or sets unit for the weight of the object
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IKineticEnergyEquationViewModel.SelectedSpeedUnit">
            <summary>
            Gets or sets unit for the speed of the object
            </summary>
        </member>
        <member name="T:MobileXamarin.IViewModels.ILagrangeEquationViewModel">
            <summary>
            Lagrange interpolation equation viewmodel
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.ILagrangeEquationViewModel.ControlPoints">
            <summary>
            Gets or sets start control points for interpolation
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.ILagrangeEquationViewModel.AddControlPointCommand">
            <summary>
            Gets or sets command which adds new control point
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.ILagrangeEquationViewModel.RemoveControlPointCommand">
            <summary>
            Gets or sets command which removes last control point
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.ILagrangeEquationViewModel.NewX">
            <summary>
            Gets or sets x position of new control point
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.ILagrangeEquationViewModel.NewY">
            <summary>
            Gets or sets y position of new control point
            </summary>
        </member>
        <member name="T:MobileXamarin.IViewModels.IResultViewModel">
            <summary>
            Result viewmodel
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IResultViewModel.Solution">
            <summary>
            Gets or sets collection of step results for the equation in MathSource type to display math symbols correctly
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IResultViewModel.ControlPoints">
            <summary>
            Control points for chart
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IResultViewModel.Finish">
            <summary>
            Gets or sets command which finish this equation resolving and goes to the start page
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IResultViewModel.Chart">
            <summary>
            Gets or sets chart (right now we use Telerik, so it is not used
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IResultViewModel.StartPoints">
            <summary>
            Start points before calculation
            </summary>
        </member>
        <member name="T:MobileXamarin.IViewModels.IRocketEquationViewModel">
            <summary>
            Rocket equation view model
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.MassOfTheRocket">
            <summary>
            Gets or sets mass of the rocket
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.MassOfTheFuel">
            <summary>
            Gets or sets mass of the fuel in the rocket
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.FlightTime">
            <summary>
            Gets or sets for how long of the rocket's trip the result is calculating
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.ProperImpulse">
            <summary>
            Gets or sets value of how much fuel is throwing out from the rocket
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.AmountOfThrownFuel">
            <summary>
            Amount of thrown fuel away for period of time eg kg/s
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.MassOfTheRocketUnits">
            <summary>
            Gets or sets units for mass of the rocket
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.MassOfTheFuelUnits">
            <summary>
            Gets or sets units for mass of the fuel
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.FlightTimeUnits">
            <summary>
            Gets or sets units for the flight time
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.ProperImpulseUnits">
            <summary>
            Gets or sets units for the proper impulse
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.AmountOfThrownFuelUnits">
            <summary>
            Gets or sets units for amount of thrown fuel
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.SelectedMassOfTheRocketUnit">
            <summary>
            Selected unit for mass of the rocket
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.SelectedMassOfTheFuelUnit">
            <summary>
            Selected unit for mass of the fuel
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.SelectedFlightTimeUnit">
            <summary>
            Selected unit for the flight time
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.SelectedProperImpulseUnit">
            <summary>
            Selected unit for the proper impulse
            </summary>
        </member>
        <member name="P:MobileXamarin.IViewModels.IRocketEquationViewModel.SelectedAmountOfThrownFuelUnit">
            <summary>
            Unit for thrown fuel away eg. kg/s
            </summary>
        </member>
        <member name="T:MobileXamarin.Models.Equation">
            <summary>
            Equation model
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.Equation.Name">
            <summary>
            Name of the equation
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.Equation.EquationType">
            <summary>
            Type of equation
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.Equation.Image">
            <summary>
            Gets the image of that equation
            </summary>
        </member>
        <member name="M:MobileXamarin.Models.Equation.#ctor(System.String,System.String,MobileXamarin.Enums.EquationType)">
            <summary>
            Constructor for equation model
            </summary>
            <param name="name">Name of the equation</param>
            <param name="imageName">Image name which is in Assets for the equation</param>
            <param name="type">Type of equation</param>
        </member>
        <member name="M:MobileXamarin.Models.Equation.ToString">
            <inheritdoc />
        </member>
        <member name="T:MobileXamarin.Models.Point">
            <summary>
            Point with double type parameters
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.Point.X">
            <summary>
            X value
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.Point.Y">
            <summary>
            Y value
            </summary>
        </member>
        <member name="M:MobileXamarin.Models.Point.#ctor(System.Double,System.Double)">
            <summary>
            Point constructor
            </summary>
            <param name="x">X value</param>
            <param name="y">Y value</param>
        </member>
        <member name="M:MobileXamarin.Models.Point.ToString">
            <inheritdoc />
        </member>
        <member name="T:MobileXamarin.Models.Result">
            <summary>
            Result holder for any equations
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.Result.ControlPoints">
            <summary>
            Control points for the chart
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.Result.Solution">
            <summary>
            Latex representation of the velocity at the end of the rocket's flight time
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.Result.StartPoints">
            <summary>
            Points before calculation
            </summary>
        </member>
        <member name="M:MobileXamarin.Models.Result.#ctor(System.Collections.Generic.IEnumerable{MobileXamarin.Models.Point},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Constructor for Result
            </summary>
            <param name="controlPoints">Control points for chart</param>
            <param name="solution">Latex representation of the velocity at the end of the rocket's flight</param>
        </member>
        <member name="M:MobileXamarin.Models.Result.#ctor(System.Collections.Generic.IEnumerable{MobileXamarin.Models.Point},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{MobileXamarin.Models.Point})">
            <summary>
            Constructor for Result
            </summary>
            <param name="controlPoints">Control points for chart</param>
            <param name="solution">Latex representation of the velocity at the end of the rocket's flight</param>
            <param name="startPoints">Points before calculation</param>
        </member>
        <member name="T:MobileXamarin.Models.RocketParameter">
            <summary>
            Parameters of the rocket
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.RocketParameter.MassOfTheRocket">
            <summary>
            Gets Mass of the rocket
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.RocketParameter.MassOfTheRocketUnit">
            <summary>
            Gets Mass of the rocket unit
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.RocketParameter.MassOfTheFuel">
            <summary>
            Gets mass of the fuel
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.RocketParameter.MassOfTheFuelUnit">
            <summary>
            Gets mass of the fuel unit
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.RocketParameter.ProperImpulse">
            <summary>
            Gets proper impulse
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.RocketParameter.ProperImpulseUnit">
            <summary>
            Gets proper impulse unit
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.RocketParameter.FlightTime">
            <summary>
            Gets flight time
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.RocketParameter.FlightTimeUnit">
            <summary>
            Gets flight time unit
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.RocketParameter.AmountOfThrownFuel">
            <summary>
            Amount of thrown fuel in period of time eg every second [kg/s]
            </summary>
        </member>
        <member name="P:MobileXamarin.Models.RocketParameter.AmountOfThrownFuelUnit">
            <summary>
            Unit for thrown fuel
            </summary>
        </member>
        <member name="M:MobileXamarin.Models.RocketParameter.#ctor(System.Double,MobileXamarin.Enums.Units,System.Double,MobileXamarin.Enums.Units,System.Double,MobileXamarin.Enums.Units,System.Double,MobileXamarin.Enums.Units,System.Double,MobileXamarin.Enums.Units)">
            <summary>
            Parameters of the rocket
            </summary>
            <param name="massOfTheRocket">Mass of the rocket</param>
            <param name="massOfTheRocketUnit">Mass rocket unit</param>
            <param name="massOfTheFuel">Mass of the fuel</param>
            <param name="massOfTheFuelUnit">Mass of the fuel unit</param>
            <param name="properImpulse">Proper impulse</param>
            <param name="properImpulseUnit">Proper impulse unit</param>
            <param name="flightTime">Flight time</param>
            <param name="flightTimeUnit">Flight time unit</param>
            <param name="amountOfThrownFuel">Amount of thrown fuel in period of time eg every second [kg/s]</param>
            <param name="amountOfThrownFuelUnit">Unit for thrown fuel</param>
        </member>
        <member name="T:MobileXamarin.Repository.EquationRepository">
            <inheritdoc />
        </member>
        <member name="M:MobileXamarin.Repository.EquationRepository.#ctor">
            <summary>
            Constructor for Equation repository
            </summary>
        </member>
        <member name="M:MobileXamarin.Repository.EquationRepository.GetEquations">
            <summary>
            Get all saved equations
            </summary>
            <returns>Returns all equations</returns>
        </member>
        <member name="T:MobileXamarin.Repository.IEquationRepository">
            <summary>
            Repository for equations
            </summary>
        </member>
        <member name="M:MobileXamarin.Repository.IEquationRepository.GetEquations">
            <summary>
            Get all saved equations
            </summary>
            <returns>Returns all equations</returns>
        </member>
        <member name="T:MobileXamarin.Repository.UnitRepository">
            <summary>
            Repository for units
            </summary>
        </member>
        <member name="M:MobileXamarin.Repository.UnitRepository.GetStringByUnit(MobileXamarin.Enums.Units)">
            <summary>
            Get string unit representation based on its enum value
            </summary>
            <param name="unit">Enum for unit</param>
            <returns>String representation for unit, if doesn't exist - returns empty string</returns>
        </member>
        <member name="M:MobileXamarin.Repository.UnitRepository.GetUnitByString(System.String)">
            <summary>
            Get enum unit based on the string representation
            </summary>
            <param name="unitString">String representation of the unit</param>
            <returns>Enum representation of the unit</returns>
        </member>
        <member name="T:MobileXamarin.ViewModels.BaseViewModel">
            <summary>
            Base class for view models
            </summary>
        </member>
        <member name="F:MobileXamarin.ViewModels.BaseViewModel.PopupService">
            <summary>
            Popup service for displaying popups
            </summary>
        </member>
        <member name="F:MobileXamarin.ViewModels.BaseViewModel.NavigationService">
            <summary>
            Navigation service for navigation through pages
            </summary>
        </member>
        <member name="E:MobileXamarin.ViewModels.BaseViewModel.PropertyChanged">
            <summary>
            Property changed event handler
            </summary>
        </member>
        <member name="M:MobileXamarin.ViewModels.BaseViewModel.OnPropertyChanged(System.String)">
            <summary>
            OnPropertyChanged - raises PropertyChanged event
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:MobileXamarin.ViewModels.EquationViewModelBase">
            <summary>
            Abstract base class for equation view models
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.EquationViewModelBase.IsBusy">
            <summary>
            Indicates when to show busy indication
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.EquationViewModelBase.Resolve">
            <summary>
            Gets command for resolving equation
            </summary>
        </member>
        <member name="M:MobileXamarin.ViewModels.EquationViewModelBase.#ctor">
            <summary>
            Constructor for base class for equation view models
            </summary>
        </member>
        <member name="M:MobileXamarin.ViewModels.EquationViewModelBase.ResolveCanExecute">
            <summary>
            Determines if can execute Resolve command
            </summary>
            <returns>True when can execute Resolve command, False if not</returns>
        </member>
        <member name="M:MobileXamarin.ViewModels.EquationViewModelBase.ResolveExecute">
            <summary>
            Executes Resolve command
            </summary>
            <returns>Task which execute command</returns>
        </member>
        <member name="T:MobileXamarin.ViewModels.HomeViewModel">
            <summary>
            Home view model <see cref="T:MobileXamarin.IViewModels.IHomeViewModel"/>
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.HomeViewModel.SelectedEquation">
            <summary>
            Selected equation from the list
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.HomeViewModel.Equations">
            <summary>
            Gets all equations
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.HomeViewModel.NextPageCommand">
            <summary>
            Command for navigating to the next page when equation has been selected
            </summary>
        </member>
        <member name="M:MobileXamarin.ViewModels.HomeViewModel.#ctor(MobileXamarin.Repository.IEquationRepository,Xamarin.Forms.Navigation.INavigationService)">
            <summary>
            Constructor for HomeViewModel
            </summary>
            <param name="equationRepository">Equation repository <see cref="T:MobileXamarin.Repository.IEquationRepository"/></param>
            <param name="navigationService">Navigation service <see cref="T:Xamarin.Forms.Navigation.INavigationService"/></param>
        </member>
        <member name="T:MobileXamarin.ViewModels.KineticEnergyEquationViewModel">
            <summary>
            Kinetic Energy Equation ViewModel
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.KineticEnergyEquationViewModel.Weight">
            <summary>
            Gets or sets weight of the object
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.KineticEnergyEquationViewModel.Speed">
            <summary>
            Gets or sets speed of the object
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.KineticEnergyEquationViewModel.WeightUnits">
            <summary>
            Gets or sets all units for the weight
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.KineticEnergyEquationViewModel.SpeedUnits">
            <summary>
            Gets or sets all units for the speed
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.KineticEnergyEquationViewModel.SelectedWeightUnit">
            <summary>
            Gets or sets unit for the weight of the object
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.KineticEnergyEquationViewModel.SelectedSpeedUnit">
            <summary>
            Gets or sets unit for the speed of the object
            </summary>
        </member>
        <member name="M:MobileXamarin.ViewModels.KineticEnergyEquationViewModel.#ctor(MobileXamarin.EquationResolvers.IKineticEquationResolver,Xamarin.Forms.Navigation.INavigationService,GalaSoft.MvvmLight.Messaging.IMessenger)">
            <summary>
            Constructor for KineticEnergyEquationViewModel
            </summary>
            <param name="resolver">Resolver for kinetic energy equation <see cref="T:MobileXamarin.EquationResolvers.IKineticEquationResolver"/></param>
            <param name="navigationService">Navigation service <see cref="T:Xamarin.Forms.Navigation.INavigationService"/></param>
            <param name="messenger">Messenger <see cref="T:GalaSoft.MvvmLight.Messaging.IMessenger"/></param>
        </member>
        <member name="M:MobileXamarin.ViewModels.KineticEnergyEquationViewModel.ResolveCanExecute">
            <summary>
            Determines if can execute Resolve command
            </summary>
            <returns>True when can execute Resolve command, False if not</returns>
        </member>
        <member name="M:MobileXamarin.ViewModels.KineticEnergyEquationViewModel.ResolveExecute">
            <summary>
            Executes Resolve command
            </summary>
            <returns>Task which execute command</returns>
        </member>
        <member name="T:MobileXamarin.ViewModels.LagrangeEquationViewModel">
            <summary>
            Lagrange interpolation viewmodel
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.LagrangeEquationViewModel.ControlPoints">
            <summary>
            Gets or sets start control points for interpolation
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.LagrangeEquationViewModel.NewX">
            <summary>
            Gets or sets x position of new control point
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.LagrangeEquationViewModel.NewY">
            <summary>
            Gets or sets y position of new control point
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.LagrangeEquationViewModel.AddControlPointCommand">
            <summary>
            Gets or sets command which adds new control point
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.LagrangeEquationViewModel.RemoveControlPointCommand">
            <summary>
            Gets or sets command which removes last control point
            </summary>
        </member>
        <member name="M:MobileXamarin.ViewModels.LagrangeEquationViewModel.#ctor(MobileXamarin.EquationResolvers.ILagrangeResolver,GalaSoft.MvvmLight.Messaging.IMessenger,Xamarin.Forms.Navigation.INavigationService)">
            <summary>
            Constructor for LagrangeEquationViewModel
            </summary>
            <param name="resolver">Lagrange interpolation equation resolver <see cref="T:MobileXamarin.EquationResolvers.ILagrangeResolver"/></param>
            <param name="messenger">Messenger <see cref="T:GalaSoft.MvvmLight.Messaging.IMessenger"/></param>
            <param name="navigationService">Navigation service <see cref="T:Xamarin.Forms.Navigation.INavigationService"/></param>
        </member>
        <member name="M:MobileXamarin.ViewModels.LagrangeEquationViewModel.ResolveCanExecute">
            <summary>
            Determines if can execute Resolve command
            </summary>
            <returns>True when can execute Resolve command, False if not</returns>
        </member>
        <member name="M:MobileXamarin.ViewModels.LagrangeEquationViewModel.ResolveExecute">
            <summary>
            Executes Resolve command
            </summary>
            <returns>Task which execute command</returns>
        </member>
        <member name="T:MobileXamarin.ViewModels.ResultViewModel">
            <summary>
            Result viewmodel
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.ResultViewModel.Solution">
            <summary>
            Gets or sets collection of step results for the equation in MathSource type to display math symbols correctly
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.ResultViewModel.ControlPoints">
            <summary>
            Control points for chart
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.ResultViewModel.StartPoints">
            <summary>
            Start points before calculation
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.ResultViewModel.Chart">
            <summary>
            Gets or sets chart (right now we use Telerik, so it is not used
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.ResultViewModel.Finish">
            <summary>
            Gets or sets command which finish this equation resolving and goes to the start page
            </summary>
        </member>
        <member name="M:MobileXamarin.ViewModels.ResultViewModel.#ctor(Xamarin.Forms.Navigation.INavigationService,Xamarin.Forms.Popups.IPopupsService,GalaSoft.MvvmLight.Messaging.IMessenger)">
            <summary>
            Constructor for ResultViewModel
            </summary>
            <param name="navigationService">Navigation service <see cref="T:Xamarin.Forms.Navigation.INavigationService"/></param>
            <param name="popupsService">Popup service <see cref="T:Xamarin.Forms.Popups.IPopupsService"/></param>
            <param name="messenger">Messenger <see cref="T:GalaSoft.MvvmLight.Messaging.IMessenger"/></param>
        </member>
        <member name="M:MobileXamarin.ViewModels.ResultViewModel.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MobileXamarin.ViewModels.ResultViewModel.Dispose(System.Boolean)">
            <summary>
            Dispose this when it's not whi;e disposing
            </summary>
            <param name="disposing">Is disposing</param>
        </member>
        <member name="T:MobileXamarin.ViewModels.RocketEquationViewModel">
            <summary>
            Rocket equation viewmodel
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.MassOfTheRocket">
            <summary>
            Gets or sets mass of the rocket
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.MassOfTheFuel">
            <summary>
            Gets or sets mass of the fuel in the rocket
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.FlightTime">
            <summary>
            Gets or sets for how long of the rocket's trip the result is calculating
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.ProperImpulse">
            <summary>
            Gets or sets value of how much fuel is throwing out from the rocket
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.AmountOfThrownFuel">
            <summary>
            Amount of thrown fuel away for period of time eg kg/s
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.SelectedMassOfTheRocketUnit">
            <summary>
            Selected unit for mass of the rocket
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.SelectedMassOfTheFuelUnit">
            <summary>
            Selected unit for mass of the fuel
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.SelectedFlightTimeUnit">
            <summary>
            Selected unit for the flight time
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.SelectedProperImpulseUnit">
            <summary>
            Selected unit for the proper impulse
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.SelectedAmountOfThrownFuelUnit">
            <summary>
            Unit for thrown fuel away eg. kg/s
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.MassOfTheRocketUnits">
            <summary>
            Gets or sets units for mass of the rocket
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.MassOfTheFuelUnits">
            <summary>
            Gets or sets units for mass of the fuel
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.FlightTimeUnits">
            <summary>
            Gets or sets units for the flight time
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.ProperImpulseUnits">
            <summary>
            Gets or sets units for the proper impulse
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.RocketEquationViewModel.AmountOfThrownFuelUnits">
            <summary>
            Gets or sets units for amount of thrown fuel
            </summary>
        </member>
        <member name="M:MobileXamarin.ViewModels.RocketEquationViewModel.#ctor(MobileXamarin.EquationResolvers.IRocketEquationResolver,Xamarin.Forms.Navigation.INavigationService,GalaSoft.MvvmLight.Messaging.IMessenger)">
            <summary>
            Constructor for RocketEquationViewModel
            </summary>
            <param name="resolver">Equation resolver for rocket</param>
            <param name="navigationService">Navigation service</param>
            <param name="messenger">Messenger</param>
        </member>
        <member name="M:MobileXamarin.ViewModels.RocketEquationViewModel.ResolveCanExecute">
            <summary>
            Determines if can execute Resolve command
            </summary>
            <returns>True when can execute Resolve command, False if not</returns>
        </member>
        <member name="M:MobileXamarin.ViewModels.RocketEquationViewModel.ResolveExecute">
            <summary>
            Executes Resolve command
            </summary>
            <returns>Task which execute command</returns>
        </member>
        <member name="T:MobileXamarin.ViewModels.ViewModelLocator">
            <summary>
            IoC container
            </summary>
        </member>
        <member name="M:MobileXamarin.ViewModels.ViewModelLocator.#ctor">
            <summary>
            Constructor for ViewModelLocator
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.ViewModelLocator.Home">
            <summary>
            Gets an instance for <see cref="T:MobileXamarin.IViewModels.IHomeViewModel"/> <see cref="T:MobileXamarin.ViewModels.HomeViewModel"/>
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.ViewModelLocator.Kinetic">
            <summary>
            Gets an instance for <see cref="T:MobileXamarin.IViewModels.IKineticEnergyEquationViewModel"/> <see cref="T:MobileXamarin.ViewModels.KineticEnergyEquationViewModel"/>
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.ViewModelLocator.Result">
            <summary>
            Gets an instance for <see cref="T:MobileXamarin.IViewModels.IResultViewModel"/> <see cref="T:MobileXamarin.ViewModels.ResultViewModel"/>
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.ViewModelLocator.Lagrange">
            <summary>
            Gets an instance for <see cref="T:MobileXamarin.IViewModels.ILagrangeEquationViewModel"/> <see cref="T:MobileXamarin.ViewModels.LagrangeEquationViewModel"/>
            </summary>
        </member>
        <member name="P:MobileXamarin.ViewModels.ViewModelLocator.Rocket">
            <summary>
            Gets an instance for <see cref="T:MobileXamarin.IViewModels.IRocketEquationViewModel"/> <see cref="T:MobileXamarin.ViewModels.RocketEquationViewModel"/>
            </summary>
        </member>
        <member name="T:MobileXamarin.App">
            <summary>
            Core class for Xamarin app
            </summary>
        </member>
        <member name="M:MobileXamarin.App.#ctor">
            <summary>
            Constructor for App
            </summary>
        </member>
        <member name="M:MobileXamarin.App.OnStart">
            <summary>
            Handle when your app starts
            </summary>
        </member>
        <member name="M:MobileXamarin.App.OnSleep">
            <summary>
            Handle when your app sleeps
            </summary>
        </member>
        <member name="M:MobileXamarin.App.OnResume">
            <summary>
            Handle when your app resumes
            </summary>
        </member>
        <member name="T:MobileXamarin.Views.HomeView">
            <summary>
            Home view class
            </summary>
        </member>
        <member name="M:MobileXamarin.Views.HomeView.#ctor">
            <summary>
            Constructor for Home view
            </summary>
        </member>
        <member name="T:MobileXamarin.Views.KineticEnergyEquationView">
            <summary>
            Kinetic energy view
            </summary>
        </member>
        <member name="M:MobileXamarin.Views.KineticEnergyEquationView.#ctor">
            <summary>
            Constructor for kinetic energy
            </summary>
        </member>
        <member name="T:MobileXamarin.Views.LagrangeEquationView">
            <summary>
            Lagrange view
            </summary>
        </member>
        <member name="P:MobileXamarin.Views.LagrangeEquationView.ViewModel">
            <summary>
            View Model which is context for that view
            </summary>
        </member>
        <member name="M:MobileXamarin.Views.LagrangeEquationView.#ctor">
            <summary>
            Lagrange Equation View Constructor
            </summary>
        </member>
        <member name="T:MobileXamarin.Views.ResultView">
            <summary>
            Result view
            </summary>
        </member>
        <member name="P:MobileXamarin.Views.ResultView.ViewModel">
            <summary>
            View model for that view
            </summary>
        </member>
        <member name="M:MobileXamarin.Views.ResultView.#ctor">
            <summary>
            Constructor for result view
            </summary>
        </member>
        <member name="M:MobileXamarin.Views.ResultView.OnAppearing">
            <summary>
            Handle when view is appearing
            </summary>
        </member>
        <member name="M:MobileXamarin.Views.ResultView.OnBackButtonPressed">
            <summary>
            Handle when back button pressed
            </summary>
            <returns>True if pressed</returns>
        </member>
        <member name="T:MobileXamarin.Views.RocketEquationView">
            <summary>
            Rocket view
            </summary>
        </member>
        <member name="M:MobileXamarin.Views.RocketEquationView.#ctor">
            <summary>
            Constructor for a rocket
            </summary>
        </member>
    </members>
</doc>
